{"version":3,"sources":["components/layout/Header.js","components/Rows.js","utils/Api.js","components/Search.js","components/TableContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Rows","props","scope","src","image","fname","lname","phone","email","dob","axios","get","Search","type","name","placeholder","value","onChange","TableContainer","state","result","search","getDate","date","moment","format","sortFNames","newResults","results","sort","a","b","sortedNamesA","first","sortedNamesB","setState","sortLNames","last","handleInputChange","event","searchInput","target","searchTerm","toLowerCase","filterEmployees","filter","employee","includes","console","log","filtered","API","then","res","data","catch","err","this","className","onClick","map","cool","picture","thumbnail","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.450b1a5b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header(){\r\n    return(\r\n        <header>\r\n            <h1>Employee Directory</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction Rows (props){\r\n\r\n    \r\n        return(\r\n            <tr>\r\n            <th scope=\"row\"><img src={props.image}/></th>\r\n            <td>{props.fname}</td>\r\n            <td>{props.lname}</td>\r\n            <td>{props.phone}</td>\r\n            <td>{props.email}</td>\r\n            <td>{props.dob}</td>\r\n          </tr>  \r\n        )\r\n}\r\n\r\nexport default Rows;","import axios from \"axios\";\r\n\r\n// Export an object containing methods we'll use for accessing the API\r\n\r\nexport default {\r\n    getPeopleList: function() {\r\n      return axios.get(\"https://randomuser.me/api/?results=100\");\r\n    }\r\n  };","import React from 'react';\r\n    \r\n    \r\n    function Search(props) {\r\n        return (\r\n            <form>\r\n            <input type=\"text\" name=\"search\" placeholder=\"Search\" value={props.value} onChange={props.onChange} />\r\n          </form>\r\n        );\r\n      }\r\n\r\nexport default Search;","import React, { Component } from \"react\";\r\nimport Rows from \"./Rows\";\r\nimport API from \"../utils/Api\";\r\nimport Search from \"./Search\";\r\nimport moment from 'moment';\r\n\r\nclass TableContainer extends Component {\r\n\r\n  state = {\r\n    result: \"\",\r\n    search: \"\"\r\n  }\r\n\r\n  //calls the function from the API call\r\n  componentDidMount() {\r\n    API.getPeopleList()\r\n      .then(res => this.setState({ result: res.data }))\r\n\r\n      .catch(err => console.log(err));\r\n    console.log(this.state.result)\r\n  }\r\n\r\n//formats users' dates of birth in MM/DD/YYYY format\r\n  getDate = (date) => {\r\n    const bday = moment(date).format(\"L\");\r\n    return bday;\r\n   }\r\n\r\n   //sorts the users by first name alphabetically in ascending order\r\n  sortFNames = () => {\r\n\r\n    const newResults = this.state.result.results.sort(function (a, b) {\r\n\r\n      const sortedNamesA = a.name.first\r\n      const sortedNamesB = b.name.first\r\n      if (\r\n        sortedNamesA < sortedNamesB\r\n      ) {\r\n        return -1\r\n      }\r\n      if (\r\n        sortedNamesB < sortedNamesA) {\r\n        return 1\r\n      }\r\n      return 0\r\n    })\r\n    this.setState({ newResults })\r\n  }\r\n\r\n  //sorts the users by last name alphabetically in ascending order\r\n  sortLNames = () => {\r\n\r\n    const newResults = this.state.result.results.sort(function (a, b) {\r\n\r\n      const sortedNamesA = a.name.last\r\n      const sortedNamesB = b.name.last\r\n      if (\r\n        sortedNamesA < sortedNamesB\r\n      ) {\r\n        return -1\r\n      }\r\n      if (\r\n        sortedNamesB < sortedNamesA) {\r\n        return 1\r\n      }\r\n      return 0\r\n    })\r\n    this.setState({ newResults })\r\n  }\r\n\r\n  //will filter the results according to the user's input in the form\r\n  handleInputChange = event => {\r\n    let searchInput = event.target.value;\r\n    let searchTerm = searchInput.toLowerCase();\r\n    let filterEmployees = [];\r\n    //filter through search for potential matches for searched username\r\n    if (searchInput !== \"\") {\r\n      filterEmployees =  this.state.result.results.filter(employee => \r\n        employee.name.first.toLowerCase().includes(searchTerm)  ||\r\n        employee.name.last.toLowerCase().includes(searchTerm)\r\n        // employee.email.toLowerCase().includes(searchTerm) ||\r\n        // employee.phone.toLowerCase().includes(searchTerm)  ||\r\n        // new Date(employee.dob.date).toLocaleDateString().includes(searchTerm)\r\n      )\r\n    } else {\r\n      //setting filterUsername to the results grabbed from the API\r\n      filterEmployees = this.state.result.results\r\n    }\r\n    this.setState({search: searchInput})\r\n    this.setState({result: {results: filterEmployees}})\r\n    console.log(this.state.filtered)\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Search\r\n        value={this.state.search}\r\n        onChange={this.handleInputChange}\r\n        />\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Image</th>\r\n              <th scope=\"col\" onClick={this.sortFNames}>First Name</th>\r\n              <th scope=\"col\" onClick={this.sortLNames}>Last Name</th>\r\n              <th scope=\"col\">Phone</th>\r\n              <th scope=\"col\">Email</th>\r\n              <th scope=\"col\">DOB</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.result === \"\" ? console.log(\"no result\") : (this.state.result.results.map(cool => (\r\n              < Rows\r\n                image={cool.picture.thumbnail}\r\n                key={cool.phone}\r\n                fname={cool.name.first}\r\n                lname={cool.name.last}\r\n                phone={cool.phone}\r\n                email={cool.email}\r\n                dob={this.getDate(cool.dob.date)}\r\n              />\r\n            )))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TableContainer;\r\n","// import logo from './logo.svg';\nimport React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/layout/Header';\nimport TableContainer from './components/TableContainer';\n// import Search from './components/Search';\n\nclass App extends Component {\n\n\n  render() {\n  return (\n    <div className=\"Dir\">\n      <div className=\"container\">\n        <Header />\n        {/* <Search /> */}\n        <TableContainer />\n      </div>\n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}